rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    // Recipes: readable if public or by owner. Writable only by owner.
    match /recipes/{recipeId} {
      allow get: if resource.data.user_id == null || request.auth.uid == resource.data.user_id;
      allow list: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.user_id;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.user_id;
    }

    // Profiles: Writable only by the owner.
    match /profiles/{userId} {
      allow read, create, update: if isAuthenticated() && request.auth.uid == userId;
    }

    // Generic rule for all other user-specific collections.
    match /{collection}/{docId} {
      allow read, delete: if isAuthenticated() && request.auth.uid == resource.data.user_id;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.user_id;
      allow update: if isAuthenticated() && request.auth.uid == request.resource.data.user_id;
    }
  }
}
